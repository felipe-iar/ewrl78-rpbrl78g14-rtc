/*
* Copyright 2022 IAR Systems AB.
*
* Permission to use, copy, modify, and distribute this software for any
* purpose with or without fee is hereby granted, provided that the above
* copyright notice and this permission notice appear in all copies.
*
* THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
* WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
* ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
* WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
* ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
* OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/


/* This C-SPY macro module installs a breakpoint for logging */

__var _breakID;
__var _fileHandle;

cspyCheckBreakpoint() {
  if (_breakID == 0) {
      __message "CSPY-print: required breakpoint set FAILED.\n";
  }
  else {
      __message "CSPY-print: required breakpoint set OK.\n";
  }
}

cspyPrintMacro() {
    __message "CSPY-print: ", __toString(buffer,sizeof(buffer));
    __fmessage _fileHandle, "CSPY-print: ", __toString(buffer,sizeof(buffer)), "\n";
}

execUserReset() {
  __message "execUserReset() called.\n";
  if ( _fileHandle )
  {
    __resetFile( _fileHandle );
  }
}

execUserSetup() {
    _fileHandle = __openFile("$PROJ_DIR$/cspy-print.log", "w+");
    if ( !_fileHandle )
    {
        __message "CSPY-print: could not open file.\n";
    }
    // Set a breakpoint at label cspyPrintInvoke() and call the cspyPrintMacro() at breakpoint hit
    _breakID = __setCodeBreak("cspyPrintInvoke", 0, "cspyPrintMacro()", "TRUE", "");
    cspyCheckBreakpoint();
}

execUserExit() {
    __clearBreak( _breakID );
    __closeFile( _fileHandle );
    __message "execUserExit(): called.";
}