/*
* Copyright 2022 IAR Systems AB.
*
* Permission to use, copy, modify, and distribute this software for any
* purpose with or without fee is hereby granted, provided that the above
* copyright notice and this permission notice appear in all copies.
*
* THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
* WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
* MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
* ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
* WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
* ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
* OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/


/* This C-SPY macro module installs a breakpoint for logging */

__var _breakID;

checkBreakpoint() {
  if (_breakID == 0) {
      __message "CSPY-print: required breakpoint set failed.\n";
  }
  else {
      __message "CSPY-print: required breakpoint set OK.\n";
  }
}

cspyPrintMacro() {
__message "CSPY-print: ",__toString(cspyPrintBuffer,128);
}

execUserSetup() {
    // Set a breakpoint at label "main" and call a function at breakpoint hit
    _breakID = __setCodeBreak("cspyPrint", 0, "cspyPrintMacro()", "TRUE", "");
    checkBreakpoint();
}